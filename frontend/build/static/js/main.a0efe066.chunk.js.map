{"version":3,"sources":["components/Footer.js","constants/userConstants.js","components/Header.js","actions/userActions.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/notesConstants.js","actions/notesActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyNotes/MyNotes.js","screens/SingleNote/SingleNote.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/SingleNote/CreateNote.js","screens/ProfileScreen/ProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/notesReducers.js","reducers/userReducers.js","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","Header","setSearch","dispatch","useDispatch","userInfo","useSelector","state","userLogin","useEffect","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Form","inline","FormControl","type","placeholder","onChange","e","target","value","Link","NavDropdown","title","name","Item","Divider","onClick","a","localStorage","removeItem","LandingPage","history","push","to","Button","size","MainScreen","children","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_LIST_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_CREATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_DELETE_FAIL","deleteNoteAction","getState","config","headers","Authorization","token","axios","delete","data","payload","message","response","Loading","alignItems","height","Spinner","animation","ErrorMessage","Alert","fontSize","MyNotes","search","noteList","loading","error","notes","noteDelete","loadingDelete","errorDelete","successDelete","success","successCreate","noteCreate","successUpdate","noteUpdate","get","console","log","marginLeft","marginBottom","filter","filteredNote","toLowerCase","includes","reverse","map","note","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","window","confirm","Body","Badge","category","content","createdAt","substring","SingleNote","match","useState","setTitle","setContent","setCategory","date","setDate","params","updatedAt","fetching","onSubmit","preventDefault","put","updateNoteAction","Group","controlId","Label","Control","rows","LoginScreen","email","setEmail","password","setPassword","post","setItem","JSON","stringify","login","RegisterScreen","setName","pic","setPic","confirmpassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","register","File","pics","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","label","custom","CreateNote","resetHandler","createNoteAction","Date","toLocaleDateString","ProfileScreen","location","confirmPassword","userUpdate","md","user","varient","src","alt","App","s","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0efe066.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer\n      style={{\n        width: \"100%\",\n        position: \"relative\",\n        bottom: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; Note Saver</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\n","import React, { useEffect } from \"react\";\nimport {\n  Container,\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {} from \"react-router-dom\";\nimport { logout } from \"../actions/userActions\";\n\nfunction Header({ setSearch }) {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  useEffect(() => {}, [userInfo]);\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand href=\"/\">Note Saver</Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"m-auto\">\n            {userInfo && (\n              <Form inline>\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Search\"\n                  className=\"mr-sm-2\"\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n              </Form>\n            )}\n          </Nav>\n          <Nav>\n            {userInfo ? (\n              <>\n                <Nav.Link href=\"/mynotes\">My Notes</Nav.Link>\n                <NavDropdown\n                  title={`${userInfo.name}`}\n                  id=\"collasible-nav-dropdown\"\n                >\n                  <NavDropdown.Item href=\"/profile\">\n                    {/* <img\n                      alt=\"\"\n                      src={`${userInfo.pic}`}\n                      width=\"25\"\n                      height=\"25\"\n                      style={{ marginRight: 10 }}\n                    /> */}\n                    My Profile\n                  </NavDropdown.Item>\n\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            ) : (\n              <Nav.Link href=\"/login\">Login</Nav.Link>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n};\n\nexport const register = (name, email, password, pic) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, pic, email, password },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/users/profile\", user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./LandingStyles.css\";\n\nfunction LandingPage({ history }) {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/mynotes\");\n    }\n  }, [history, userInfo]);\n\n  return (\n    <div className=\"main\">\n      <Container>\n        <Row>\n          <div className=\"intro-text\">\n            <div>\n              <h1 className=\"title\">Welcome to Note Saver</h1>\n              <p className=\"subtitle\">One Safe place for all your notes.</p>\n            </div>\n            <div className=\"buttonContainer\">\n              <Link to=\"/login\">\n                <Button size=\"lg\" className=\"landingbutton\">\n                  Login\n                </Button>\n              </Link>\n              <Link to=\"/register\">\n                <Button size=\"lg\" className=\"landingbutton\">\n                  Signup\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport \"./Screen.css\";\n\nfunction MainScreen({ children, title }) {\n  return (\n    <div className=\"mainback\">\n      <Container>\n        <Row>\n          <div className=\"page\">\n            {title && (\n              <>\n                <h1 className=\"heading\">{title}</h1>\n                <hr />\n              </>\n            )}\n            {children}\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default MainScreen;\n","export const NOTES_LIST_REQUEST = \"NOTES_LIST_REQUEST\";\nexport const NOTES_LIST_SUCCESS = \"NOTES_LIST_SUCCESS\";\nexport const NOTES_LIST_FAIL = \"NOTES_LIST_FAIL\";\n\nexport const NOTES_CREATE_REQUEST = \"NOTES_CREATE_REQUEST\";\nexport const NOTES_CREATE_SUCCESS = \"NOTES_CREATE_SUCCESS\";\nexport const NOTES_CREATE_FAIL = \"NOTES_CREATE_FAIL\";\n\nexport const NOTES_UPDATE_REQUEST = \"NOTES_UPDATE_REQUEST\";\nexport const NOTES_UPDATE_SUCCESS = \"NOTES_UPDATE_SUCCESS\";\nexport const NOTES_UPDATE_FAIL = \"NOTES_UPDATE_FAIL\";\n\nexport const NOTES_DELETE_REQUEST = \"NOTES_DELETE_REQUEST\";\nexport const NOTES_DELETE_SUCCESS = \"NOTES_DELETE_SUCCESS\";\nexport const NOTES_DELETE_FAIL = \"NOTES_DELETE_FAIL\";\n","import {\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n} from \"../constants/notesConstants\";\nimport axios from \"axios\";\n\nexport const listNotes = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/notes`, config);\n\n    dispatch({\n      type: NOTES_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const createNoteAction = (title, content, category) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: NOTES_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/notes/create`,\n      { title, content, category },\n      config\n    );\n\n    dispatch({\n      type: NOTES_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const deleteNoteAction = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/notes/${id}`, config);\n\n    dispatch({\n      type: NOTES_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const updateNoteAction = (id, title, content, category) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: NOTES_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/notes/${id}`,\n      { title, content, category },\n      config\n    );\n\n    dispatch({\n      type: NOTES_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction Loading({ size = 100 }) {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    >\n      <Spinner\n        style={{\n          width: size,\n          height: size,\n        }}\n        animation=\"border\"\n      />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst ErrorMessage = ({ variant = \"info\", children }) => {\n  return (\n    <Alert variant={variant} style={{ fontSize: 20 }}>\n      <strong>{children}</strong>\n    </Alert>\n  );\n};\n\nexport default ErrorMessage;\n","import React, { useEffect } from \"react\";\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, listNotes } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nfunction MyNotes({ history, search }) {\n  const dispatch = useDispatch();\n\n  const noteList = useSelector((state) => state.noteList);\n  const { loading, error, notes } = noteList;\n\n  // const filteredNotes = notes.filter((note) =>\n  //   note.title.toLowerCase().includes(search.toLowerCase())\n  // );\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = noteDelete;\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { success: successCreate } = noteCreate;\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { success: successUpdate } = noteUpdate;\n\n  useEffect(() => {\n    dispatch(listNotes());\n    if (!userInfo) {\n      history.push(\"/\");\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    successUpdate,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n  };\n\n  return (\n    <MainScreen title={`Welcome Back ${userInfo && userInfo.name}..`}>\n      {console.log(notes)}\n      <Link to=\"/createnote\">\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n          Create new Note\n        </Button>\n      </Link>\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n      {errorDelete && (\n        <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n      )}\n      {loading && <Loading />}\n      {loadingDelete && <Loading />}\n      {notes &&\n        notes\n          .filter((filteredNote) =>\n            filteredNote.title.toLowerCase().includes(search.toLowerCase())\n          )\n          .reverse()\n          .map((note) => (\n            <Accordion>\n              <Card style={{ margin: 10 }} key={note._id}>\n                <Card.Header style={{ display: \"flex\" }}>\n                  <span\n                    // onClick={() => ModelShow(note)}\n                    style={{\n                      color: \"black\",\n                      textDecoration: \"none\",\n                      flex: 1,\n                      cursor: \"pointer\",\n                      alignSelf: \"center\",\n                      fontSize: 18,\n                    }}\n                  >\n                    <Accordion.Toggle\n                      as={Card.Text}\n                      variant=\"link\"\n                      eventKey=\"0\"\n                    >\n                      {note.title}\n                    </Accordion.Toggle>\n                  </span>\n\n                  <div>\n                    <Button href={`/note/${note._id}`}>Edit</Button>\n                    <Button\n                      variant=\"danger\"\n                      className=\"mx-2\"\n                      onClick={() => deleteHandler(note._id)}\n                    >\n                      Delete\n                    </Button>\n                  </div>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body>\n                    <h4>\n                      <Badge variant=\"success\">\n                        Category - {note.category}\n                      </Badge>\n                    </h4>\n                    <blockquote className=\"blockquote mb-0\">\n                      <ReactMarkdown>{note.content}</ReactMarkdown>\n                      <footer className=\"blockquote-footer\">\n                        Created on{\" \"}\n                        <cite title=\"Source Title\">\n                          {note.createdAt.substring(0, 10)}\n                        </cite>\n                      </footer>\n                    </blockquote>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n          ))}\n    </MainScreen>\n  );\n}\n\nexport default MyNotes;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, updateNoteAction } from \"../../actions/notesActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction SingleNote({ match, history }) {\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [category, setCategory] = useState();\n  const [date, setDate] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { loading, error } = noteUpdate;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const { loading: loadingDelete, error: errorDelete } = noteDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n    history.push(\"/mynotes\");\n  };\n\n  useEffect(() => {\n    const fetching = async () => {\n      const { data } = await axios.get(`/api/notes/${match.params.id}`);\n\n      setTitle(data.title);\n      setContent(data.content);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateNoteAction(match.params.id, title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push(\"/mynotes\");\n  };\n\n  return (\n    <MainScreen title=\"Edit Note\">\n      <Card>\n        <Card.Header>Edit your Note</Card.Header>\n        <Card.Body>\n          <Form onSubmit={updateHandler}>\n            {loadingDelete && <Loading />}\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            {errorDelete && (\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n            )}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"title\"\n                placeholder=\"Enter the title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Enter the content\"\n                rows={4}\n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Note Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                placeholder=\"Enter the Category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button variant=\"primary\" type=\"submit\">\n              Update Note\n            </Button>\n            <Button\n              className=\"mx-2\"\n              variant=\"danger\"\n              onClick={() => deleteHandler(match.params.id)}\n            >\n              Delete Note\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Updated on - {date.substring(0, 10)}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default SingleNote;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { login } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./LoginScreen.css\";\n\nfunction LoginScreen({ history }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/mynotes\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <MainScreen title=\"LOGIN\">\n      <div className=\"loginContainer\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        <Row className=\"py-3\">\n          <Col>\n            New Customer ? <Link to=\"/register\">Register Here</Link>\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n}\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { register } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./RegisterScreen.css\";\n\nfunction RegisterScreen({ history }) {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [pic, setPic] = useState(\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n  );\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [picMessage, setPicMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const postDetails = (pics) => {\n    if (\n      pics ===\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n    ) {\n      return setPicMessage(\"Please Select an Image\");\n    }\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"notezipper\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password !== confirmpassword) {\n      setMessage(\"Passwords do not match\");\n    } else dispatch(register(name, email, password, pic));\n  };\n\n  return (\n    <MainScreen title=\"REGISTER\">\n      <div className=\"loginContainer\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              value={name}\n              placeholder=\"Enter name\"\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={confirmpassword}\n              placeholder=\"Confirm Password\"\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          {picMessage && (\n            <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n          )}\n          <Form.Group controlId=\"pic\">\n            <Form.Label>Profile Picture</Form.Label>\n            <Form.File\n              onChange={(e) => postDetails(e.target.files[0])}\n              id=\"custom-file\"\n              type=\"image/png\"\n              label=\"Upload Profile Picture\"\n              custom\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Register\n          </Button>\n        </Form>\n        <Row className=\"py-3\">\n          <Col>\n            Have an Account ? <Link to=\"/login\">Login</Link>\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n}\n\nexport default RegisterScreen;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNoteAction } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction CreateNote({ history }) {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { loading, error, note } = noteCreate;\n\n  console.log(note);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createNoteAction(title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push(\"/mynotes\");\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <MainScreen title=\"Create a Note\">\n      <Card>\n        <Card.Header>Create a new Note</Card.Header>\n        <Card.Body>\n          <Form onSubmit={submitHandler}>\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"title\"\n                value={title}\n                placeholder=\"Enter the title\"\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={content}\n                placeholder=\"Enter the content\"\n                rows={4}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Note Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                value={category}\n                placeholder=\"Enter the Category\"\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button type=\"submit\" variant=\"primary\">\n              Create Note\n            </Button>\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n              Reset Feilds\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Creating on - {new Date().toLocaleDateString()}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default CreateNote;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./ProfileScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProfile } from \"../../actions/userActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pic, setPic] = useState();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [picMessage, setPicMessage] = useState();\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const { loading, error, success } = userUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n      setPic(userInfo.pic);\n    }\n  }, [history, userInfo]);\n\n  const postDetails = (pics) => {\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"notezipper\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(pic);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(updateProfile({ name, email, password, pic }));\n  };\n\n  return (\n    <MainScreen title=\"EDIT PROFILE\">\n      <div>\n        <Row className=\"profileContainer\">\n          <Col md={6}>\n            <Form onSubmit={submitHandler}>\n              {loading && <Loading />}\n              {success && (\n                <ErrorMessage variant=\"success\">\n                  Updated Successfully\n                </ErrorMessage>\n              )}\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>{\" \"}\n              {picMessage && (\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n              )}\n              <Form.Group controlId=\"pic\">\n                <Form.Label>Change Profile Picture</Form.Label>\n                <Form.File\n                  onChange={(e) => postDetails(e.target.files[0])}\n                  id=\"custom-file\"\n                  type=\"image/png\"\n                  label=\"Upload Profile Picture\"\n                  custom\n                />\n              </Form.Group>\n              <Button type=\"submit\" varient=\"primary\">\n                Update\n              </Button>\n            </Form>\n          </Col>\n          <Col\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <img src={pic} alt={name} className=\"profilePic\" />\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default ProfileScreen;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport LandingPage from \"./screens/LandingPage/LandingPage\";\nimport MyNotes from \"./screens/MyNotes/MyNotes\";\nimport SingleNote from \"./screens/SingleNote/SingleNote\";\nimport LoginScreen from \"./screens/LoginScreen/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen/RegisterScreen\";\nimport CreateNote from \"./screens/SingleNote/CreateNote\";\nimport { useState } from \"react\";\nimport ProfileScreen from \"./screens/ProfileScreen/ProfileScreen\";\n\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n\n  return (\n    <Router>\n      <Header setSearch={(s) => setSearch(s)} />\n      <main className=\"App\">\n        <Route path=\"/\" component={LandingPage} exact />\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route\n          path=\"/mynotes\"\n          component={({ history }) => (\n            <MyNotes search={search} history={history} />\n          )}\n        />\n        <Route path=\"/note/:id\" component={SingleNote} />\n        <Route path=\"/createnote\" component={CreateNote} />;\n        <Route path=\"/profile\" component={ProfileScreen} />\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  noteCreateReducer,\n  noteDeleteReducer,\n  noteListReducer,\n  noteUpdateReducer,\n} from \"./reducers/notesReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\n\nconst reducer = combineReducers({\n  noteList: noteListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteCreate: noteCreateReducer,\n  noteDelete: noteDeleteReducer,\n  noteUpdate: noteUpdateReducer,\n  userUpdate: userUpdateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n} from \"../constants/notesConstants\";\n\nexport const noteListReducer = (state = { notes: [] }, action) => {\n  switch (action.type) {\n    case NOTES_LIST_REQUEST:\n      return { loading: true };\n    case NOTES_LIST_SUCCESS:\n      return { loading: false, notes: action.payload };\n    case NOTES_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_CREATE_REQUEST:\n      return { loading: true };\n    case NOTES_CREATE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_DELETE_REQUEST:\n      return { loading: true };\n    case NOTES_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_DELETE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_UPDATE_REQUEST:\n      return { loading: true };\n    case NOTES_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}